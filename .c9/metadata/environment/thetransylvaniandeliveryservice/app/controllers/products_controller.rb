{"filter":false,"title":"products_controller.rb","tooltip":"/thetransylvaniandeliveryservice/app/controllers/products_controller.rb","ace":{"folds":[],"scrolltop":778,"scrollleft":0,"selection":{"start":{"row":62,"column":5},"end":{"row":62,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":54,"state":"start","mode":"ace/mode/ruby"}},"hash":"016c4ad7404ebf3901081a722bcd1e5f91684a38","undoManager":{"mark":6,"position":6,"stack":[[{"start":{"row":6,"column":27},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":7,"column":4},"end":{"row":7,"column":23},"action":"insert","lines":["@test_variable = 42"],"id":3}],[{"start":{"row":72,"column":69},"end":{"row":72,"column":70},"action":"insert","lines":[","],"id":4}],[{"start":{"row":72,"column":70},"end":{"row":72,"column":71},"action":"insert","lines":[" "],"id":5},{"start":{"row":72,"column":71},"end":{"row":72,"column":72},"action":"insert","lines":["c"]}],[{"start":{"row":72,"column":71},"end":{"row":72,"column":72},"action":"remove","lines":["c"],"id":6}],[{"start":{"row":72,"column":71},"end":{"row":72,"column":72},"action":"insert","lines":[":"],"id":7},{"start":{"row":72,"column":72},"end":{"row":72,"column":73},"action":"insert","lines":["c"]},{"start":{"row":72,"column":73},"end":{"row":72,"column":74},"action":"insert","lines":["o"]},{"start":{"row":72,"column":74},"end":{"row":72,"column":75},"action":"insert","lines":["l"]},{"start":{"row":72,"column":75},"end":{"row":72,"column":76},"action":"insert","lines":["o"]},{"start":{"row":72,"column":76},"end":{"row":72,"column":77},"action":"insert","lines":["r"]}],[{"start":{"row":0,"column":0},"end":{"row":75,"column":0},"action":"remove","lines":["class ProductsController < ApplicationController","  before_action :set_product, only: [:show, :edit, :update, :destroy]","","  # GET /products","  # GET /products.json","  def index","    @products = Product.all","    @test_variable = 42","  end","","  # GET /products/1","  # GET /products/1.json","  def show","  end","","  # GET /products/new","  def new","    @product = Product.new","  end","","  # GET /products/1/edit","  def edit","  end","","  # POST /products","  # POST /products.json","  def create","    @product = Product.new(product_params)","","    respond_to do |format|","      if @product.save","        format.html { redirect_to @product, notice: 'Product was successfully created.' }","        format.json { render :show, status: :created, location: @product }","      else","        format.html { render :new }","        format.json { render json: @product.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /products/1","  # PATCH/PUT /products/1.json","  def update","    respond_to do |format|","      if @product.update(product_params)","        format.html { redirect_to @product, notice: 'Product was successfully updated.' }","        format.json { render :show, status: :ok, location: @product }","      else","        format.html { render :edit }","        format.json { render json: @product.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /products/1","  # DELETE /products/1.json","  def destroy","    @product.destroy","    respond_to do |format|","      format.html { redirect_to products_url, notice: 'Product was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_product","      @product = Product.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def product_params","      params.require(:product).permit(:name, :description, :image_url, :color)","    end","end",""],"id":8},{"start":{"row":0,"column":0},"end":{"row":74,"column":3},"action":"insert","lines":["class ProductsController < ApplicationController","  before_action :set_product, only: [:show, :edit, :update, :destroy]","","  # GET /products","  # GET /products.json","  def index","    @products = Product.all","    @test_variable = 42","  end","","  # GET /products/1","  # GET /products/1.json","  def show","  end","","  # GET /products/new","  def new","    @product = Product.new","  end","","  # GET /products/1/edit","  def edit","  end","","  # POST /products","  # POST /products.json","  def create","    @product = Product.new(product_params)","","    respond_to do |format|","      if @product.save","        format.html { redirect_to @product, notice: 'Product was successfully created.' }","        format.json { render :show, status: :created, location: @product }","      else","        format.html { render :new }","        format.json { render json: @product.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /products/1","  # PATCH/PUT /products/1.json","  def update","    respond_to do |format|","      if @product.update(product_params)","        format.html { redirect_to @product, notice: 'Product was successfully updated.' }","        format.json { render :show, status: :ok, location: @product }","      else","        format.html { render :edit }","        format.json { render json: @product.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /products/1","  # DELETE /products/1.json","  def destroy","    @product.destroy","    respond_to do |format|","      format.html { redirect_to products_url, notice: 'Product was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_product","      @product = Product.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","    def product_params","      params.require(:product).permit(:name, :description, :image_url, :color, :price)","    end","end"]}]]},"timestamp":1534545866850}