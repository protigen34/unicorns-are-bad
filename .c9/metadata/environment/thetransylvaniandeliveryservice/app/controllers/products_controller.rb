{"filter":false,"title":"products_controller.rb","tooltip":"/thetransylvaniandeliveryservice/app/controllers/products_controller.rb","undoManager":{"mark":7,"position":7,"stack":[[{"start":{"row":0,"column":0},"end":{"row":80,"column":3},"action":"insert","lines":["class ProductsController < ApplicationController","  before_action :set_product, only: [:show, :edit, :update, :destroy]","","  # GET /products","  # GET /products.json","  def index","    if params[:q]","      search_term = params[:q]","      @products = Product.search(search_term)","    else","      @products = Product.all","    end","  end","","  # GET /products/1","  # GET /products/1.json","  def show","    @comments = @product.comments.order(\"created_at DESC\").paginate(page: params[:page], per_page: 3)","  end","","  # GET /products/new","  def new","    @product = Product.new","   # redirect_to \"/simple_pages/landing_page\"","  end","","  # GET /products/1/edit","  def edit","  end","","  # POST /products","  # POST /products.json","  def create","    @product = Product.new(product_params)","","    respond_to do |format|","      if @product.save","        format.html { redirect_to @product, notice: 'Product was successfully created.' }","        format.json { render :show, status: :created, location: @product }","      else","        format.html { render :new }","        format.json { render json: @product.errors, status: :unprocessable_entity }","      end","    end","  end","","  # PATCH/PUT /products/1","  # PATCH/PUT /products/1.json","  def update","    respond_to do |format|","      if @product.update(product_params)","        format.html { redirect_to @product, notice: 'Product was successfully updated.' }","        format.json { render :show, status: :ok, location: @product }","      else","        format.html { render :edit }","        format.json { render json: @product.errors, status: :unprocessable_entity }","      end","    end","  end","","  # DELETE /products/1","  # DELETE /products/1.json","  def destroy","    @product.destroy","    respond_to do |format|","      format.html { redirect_to products_url, notice: 'Product was successfully destroyed.' }","      format.json { head :no_content }","    end","  end","","  private","    # Use callbacks to share common setup or constraints between actions.","    def set_product","      @product = Product.find(params[:id])","    end","","    # Never trust parameters from the scary internet, only allow the white list through.","  def product_params","    params.require(:product).permit(:name, :description, :image_url, :color, :price)","  end","end"],"id":1}],[{"start":{"row":17,"column":101},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":18,"column":4},"end":{"row":18,"column":5},"action":"insert","lines":["@"],"id":3}],[{"start":{"row":18,"column":5},"end":{"row":18,"column":6},"action":"insert","lines":["p"],"id":4},{"start":{"row":18,"column":6},"end":{"row":18,"column":7},"action":"insert","lines":["r"]},{"start":{"row":18,"column":7},"end":{"row":18,"column":8},"action":"insert","lines":["o"]},{"start":{"row":18,"column":8},"end":{"row":18,"column":9},"action":"insert","lines":["d"]},{"start":{"row":18,"column":9},"end":{"row":18,"column":10},"action":"insert","lines":["c"]},{"start":{"row":18,"column":10},"end":{"row":18,"column":11},"action":"insert","lines":["u"]}],[{"start":{"row":18,"column":10},"end":{"row":18,"column":11},"action":"remove","lines":["u"],"id":5},{"start":{"row":18,"column":9},"end":{"row":18,"column":10},"action":"remove","lines":["c"]}],[{"start":{"row":18,"column":9},"end":{"row":18,"column":10},"action":"insert","lines":["u"],"id":6},{"start":{"row":18,"column":10},"end":{"row":18,"column":11},"action":"insert","lines":["c"]},{"start":{"row":18,"column":11},"end":{"row":18,"column":12},"action":"insert","lines":["t"]}],[{"start":{"row":18,"column":12},"end":{"row":18,"column":13},"action":"insert","lines":["."],"id":7}],[{"start":{"row":18,"column":13},"end":{"row":18,"column":14},"action":"insert","lines":["v"],"id":8},{"start":{"row":18,"column":14},"end":{"row":18,"column":15},"action":"insert","lines":["i"]},{"start":{"row":18,"column":15},"end":{"row":18,"column":16},"action":"insert","lines":["e"]},{"start":{"row":18,"column":16},"end":{"row":18,"column":17},"action":"insert","lines":["w"]},{"start":{"row":18,"column":17},"end":{"row":18,"column":18},"action":"insert","lines":["e"]},{"start":{"row":18,"column":18},"end":{"row":18,"column":19},"action":"insert","lines":["d"]}]]},"ace":{"folds":[],"scrolltop":84,"scrollleft":0,"selection":{"start":{"row":18,"column":19},"end":{"row":18,"column":19},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":5,"state":"start","mode":"ace/mode/ruby"}},"timestamp":1538512287762,"hash":"8d4b0ea71d6661774ab30a515d55b42dbe6ada49"}